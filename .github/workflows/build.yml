name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # Removido o macos-latest

    steps:
    - uses: actions/checkout@v4 # Atualizado para a v4 para melhor performance e segurança

    - name: Install Ubuntu requirements
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        # Pacotes 'python' e 'python-dev' substituídos pelos equivalentes para Python 3
        # 'libgmp3-dev' atualizado para 'libgmp-dev'
        sudo apt-get -y install autoconf automake bison flex gcc libelf-dev make texinfo libncurses5-dev patch python-is-python3 subversion wget zlib1g-dev libtool-bin python-dev-is-python3 bzip2 libgmp-dev pkg-config

    - name: Runs all the stages in the shell
      run: |
        mkdir $PWD/ps3dev
        export PS3DEV=$PWD/ps3dev
        export PSL1GHT=$PS3DEV
        export PATH=$PATH:$PS3DEV/bin
        export PATH=$PATH:$PS3DEV/ppu/bin
        export PATH=$PATH:$PS3DEV/spu/bin
        ./toolchain.sh

    - name: Get short SHA
      id: slug
      # Sintaxe de output atualizada para o novo padrão do GitHub Actions
      run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Compress ps3dev folder
      run: |
        tar -zcvf ps3dev.tar.gz ps3dev

    - name: Get current date
      id: date
      # Sintaxe de output atualizada para o novo padrão do GitHub Actions
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{matrix.os}}-${{ steps.slug.outputs.sha8 }}
        release_name: ps3dev ${{matrix.os}} (${{steps.date.outputs.date}})
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ps3dev.tar.gz
        asset_name: ps3dev-${{matrix.os}}-${{steps.date.outputs.date}}.tar.gz
        asset_content_type: application/gzip
